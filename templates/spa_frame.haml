-extends "frame.haml"
-load smartmin i18n contacts compress

-block page-top
-block header

-block extra-style
  {{block.super}}

  -for css in styles
    %link(rel="stylesheet" type="text/css" href="{{css}}")

  :css
    temba-menu > div {
      display: none;
    }
    .shadow {
      --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 40px 0 rgba(0, 0, 0, 0.09);
    }

    html {
      --color-text-dark: #555;
      --temba-textinput-font-size: 1;
      --temba-textinput-padding: 0.6em .8em;
      --widget-box-shadow: rgba(0, 0, 0, 0.05) 0px 3px 7px 0px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
      --widget-box-shadow-focused: 0 0 0 3px rgba(164, 202, 254, .45), rgba(0, 0, 0, 0.05) 0px 3px 7px 0px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;

      --button-y: 0.2em;
      --button-x: 1.5em;
      
      --temba-select-selected-font-size: 1em;
      --temba-select-selected-padding: .6em .8em;
      --temba-select-selected-line-height: 1.2em;
      overflow: hidden;

    }

    temba-modax, temba-dialog {
      --button-y: 0.5em;
    }

    temba-button {
      --button-shadow: 0 0px 0px 1px rgba(0, 0, 0, 0.02), 0 1px 9px 0 rgba(0, 0, 0, 0.2);
    }

    temba-button.light {
      --button-shadow: rgba(0, 0, 0, 0.05) 0px 3px 7px 0px, rgba(0, 0, 0, 0.07) 0px 1px 1px 1px;
    }

    .list-buttons-container {
      --icon-color: #666;
    }

    .list-buttons-container.visible {
    }
    
    .spa-container {
      background: #f7f7f7;
      overflow-y:auto;
    }

    .spa-container.loading .spa-content{
      opacity: .3;
      pointer-events: none;
    }

    .widget-container.loading .spa-loader, .spa-container.loading .spa-loader {
      display: block;
    }

    .widget-container.loading .folders, .widget-container.loading .spa-content, .widget-container.loading .org-chooser  {
      opacity: .3;
      pointer-events: none;
    }

    .org-chooser {
      background:rgba(0,0,0,.02);
      box-shadow: 0px 0px 15px 0px rgba(0,0,0,.1) inset;
      color:rgba(0,0,0,.6);
      --color-widget-border:transparent;
      --color-widget-bg:transparent;
      --temba-select-selected-padding:0em;
      --color-widget-bg-focused:transparent;
      --color-focus:transparent;
      --widget-box-shadow-focused:transparent;
    }

    temba-loading {
      z-index: 1000;
    }

    .title-text {
      transition: opacity 100ms linear;
    }

    .loading .title-text {
      opacity: 0;
    }

    .spa-content {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      transition: opacity 200ms linear;
    }

    .bg-gradient {
      background-repeat: no-repeat;
      background-image: linear-gradient(rgb(255, 255, 255) 0%, rgb(236, 236, 236) 75%);
    }

    .lp-frame .lp-nav-item {
      padding: 5px 10px !important;
      border-radius: var(--curvature);
    }

    .lp-frame .lp-nav-item.selected {
      background: var(--color-selection);
      color: var(--color-primary-dark) !important;
      font-weight: 300;
    }

    .lp-frame {
      margin-top: 0px;
      padding-top:0em;
      padding-right: 0em;
      padding-left: 0em;
      flex-grow: 1;
      overflow-y: auto;
    }

    .lp-frame .left { 
      padding-top:1em;
      overflow-y: auto;
      overflow-x: hidden;
      padding-right: 1em;
      padding-left: 0.1em;
      margin-right: 0em;
      width: 18em;
      padding-bottom:1em;
    }

    .lp-frame .right { 
      padding: 0em;
      margin: 0em;
    }

    .lp-frame .left .lp-nav .inner-scroll {
      overflow: inherit;
      height: inherit;
      max-height: inherit;
    }

    .object-list {
      -webkit-transform: translate3d(0,0,0)
    }

    .button-action {
      background: #fff;
    }
    
    .button-action:hover, #gear-container .button-light:hover, #gear-container .button-light.dropdown-toggle:hover, #gear-container .button-light.dropdown-toggle:hover .icon-menu {
      background: var(--color-primary-dark);
      color: #fff !important;
    }

    
    #gear-container .button-light {
      padding-top: 0.62em;
      padding-bottom: 0.62em;
      margin-top: 4px;
      background: #fff;
    }

    #gear-container .button-light.dropdown-toggle {
      padding-top: 0.58em;
      padding-bottom: 0.58em;
      margin-top: 4px;
      background: #fff;
    }

    @media only screen and (max-width: 850px) {
      .ticket-list {
        flex-basis: 200px; 
      }
    }

    @media only screen and (max-width: 768px) {
      .ticket-list {
        flex-basis: 125px; 
      }

      .widget-container {
        margin-top:0px !important;
        padding-top:0px !important;
        margin-bottom:0px;
        padding-bottom:0px;
      }
    }

    .spa-container {
      height:100%;
    }

    table.list.selectable tbody tr:hover td {
      background-color: var(--color-row-hover);
      cursor: pointer;
    }

    .page-title {
      font-size: 1.5em;
    }

    temba-menu {
      background: #fff;
      border-right: 1px solid #eee;
    }

    temba-menu.servicing {
      --primary-rgb: 191,84,155;
      --color-primary-dark: rgb(var(--primary-rgb));
      --color-selection: rgba(var(--primary-rgb), .05);
    }
    
    .formax .formax-section.open {
      margin-left: 0 !important;
      margin-right: 0 !important;
    }

    .servicing:hover .hover{
      background: rgba(0,0,0,.2);

    }
}

-block full-page-script

  -compress js
    %script(src="{{ STATIC_URL }}js/labels.js")

  %script(src="{{ STATIC_URL }}highcharts/highstock.js?v=3.0")
  %script(src="{{ STATIC_URL }}highcharts/modules/drilldown.js")
  %script(src="{{ STATIC_URL }}qrious/dist/qrious.min.js")
  %script(src="{{ STATIC_URL }}rest_framework/js/prettify-min.js")

  -for script in scripts
    %script(type="text/javascript" src="{{script}}")

  -include "full_page_script.haml"

  :javascript
    var static_url = "{{STATIC_URL}}";

    var tembaVersion= "{{temba_version}}";
    var org_id = {% if active_org %}{{active_org.id}}{% else %}null{%endif%};
    var pendingRequests = [];
    function fetchAjax(url, container, options) {

      if (options["cancel"]) {
        pendingRequests.forEach(function(controller){
          controller.abort();
        });
        pendingRequests = [];
      }

      options = options || {};

      // reroute any pjax requests made from spa pages and push the content there instead
      if (container == "#pjax" && document.querySelector(".spa-content")) {
        container = ".spa-content";
        options["headers"] = (options["headers"] || {})
        options["headers"]["TEMBA-SPA"] = 1;
        options["headers"]["X-PJAX"] = 1;
      }

      var controller = new AbortController();
      pendingRequests.push(controller);
      options["signal"] = controller.signal;
      var toFetch = url;
      fetch(toFetch, options).then(function(response) {

        // remove our controller
        pendingRequests = pendingRequests.filter(
          function (controller) {
            return response.controller === controller;
          }
        );

        // if we have a version mismatch, reload the page
        var version = response.headers.get("x-temba-version");
        if (tembaVersion != version) {
          document.location.href = toFetch;
          return;
        }

        if (org_id != response.headers.get("x-temba-org")) {
          document.location.href = toFetch;
          return;
        }

        if (response.status < 200 || response.status > 299) {
          return;
        }

        if (response.redirected) {
          var url = response.url;
          window.history.replaceState({url: url}, "", url);
        }
        
        if(response.headers.get("x-temba-content-only") != 1) {
          document.location.href = url;
          return;
        }

        response.text().then(function (body){
          var containerEle = document.querySelector(container);

          // special care to unmount the editor
          var editor = document.querySelector("#rp-flow-editor");
          if (editor) {
            window.unmountEditor(editor);
          }

          setInnerHTML(containerEle, body);
          var title = document.querySelector("#title-text");
          if (title) {
            document.title = title.innerText;
          }

          if (options) {
            if ('onSuccess' in options) {
              options['onSuccess'](response);
            }
          }
        });
      }).catch(function(e) {
        // canceled
      })
    }

  :javascript
    function handleMenuReady() {
      var selection = window.location.pathname.split("/").filter(function(path){ return !!path});
      var menu = document.querySelector("temba-menu");
      if (menu) {
        {% if temba_menu_selection %}
        menu.setFocusedItem("{{temba_menu_selection}}");
        
        {% endif %}
        // window.addEventListener('resize', function() {
        // menu.collapsed = !!window.matchMedia("(max-width: 800px)").matches
        // });
      }
    }

    function goto(event, ele) {
      
      if (event.target != ele) {
        if (event.target.href) {
          event.stopPropagation();
          event.preventDefault();

          var link = event.target.href;
          if (event.metaKey) {
            window.open(link, '_blank');
          } else if (event.target.target) {
            window.open(link, event.target.target);
          } else {
            document.location.href = link;
          }
          return;  
        }
      }

      if (!ele) {
        ele = event.target;
      }

      event.stopPropagation();
      event.preventDefault();

      if (ele.setActive) {
          ele.setActive();
      }
      var href = ele.getAttribute('href');

      if (!href) {
        if(ele.tagName == "TD") {
          href = ele.closest("tr").getAttribute("href");
        }
      }

      if (href) {
        if (event.metaKey) {
          window.open(href, '_blank');
        } else {
          fetchURL(href);
        }
      }    
    }

    function showLoading(full) {
      if (full) {
        document.querySelector(".widget-container").classList.add("loading");
      } else {
        document.querySelector(".spa-container").classList.add("loading");
      }
    }

    function refreshMenu() {
      var menu = document.querySelector("temba-menu");
      if (menu) {
        menu.refresh();
      }
    }

    function refreshGlobals() {
      var store = document.querySelector("temba-store");
      store.refreshGlobals();
    }

    function hideLoading(response) {
      var containers = document.querySelectorAll(".spa-container, .widget-container");
      for(container of containers) {
        container.classList.remove("loading");
        container.classList.remove("initial-load");
      }

      // scroll our content to the top if needed
      var content = document.querySelector(".spa-content");
      content.scrollTo(0, 0);
      
      var menu = document.querySelector("temba-menu");
      if (menu && response) {
        var menuSelection = response.headers.get("temba_menu_selection");
        if (menu && menuSelection) {
          menu.setFocusedItem(menuSelection);
        }
      }

      document.querySelectorAll(".posterize").forEach(function(ele){
        ele.addEventListener("click", function(){ 
          handlePosterize(ele);
        });
      });

      var eventContainer = document.querySelector(".spa-content");
      eventContainer.dispatchEvent(new CustomEvent("temba-spa-ready"));
      refreshMenu();
    }

    function handleUpdateComplete() {
      // scroll to the top
      var content = document.querySelector(".spa-container");
      if (content) {
        content.scrollTo({ 
          top: 0,
          left: 0,
          behavior: 'smooth'}
        );
      }
    }

    function addToHistory(url) {
      if (url.indexOf("http") == -1) {
        url = document.location.origin + url;
      }
      window.history.pushState({url: url}, "", url);
    }

    function gotoURL(url, ignoreEvents, ignoreHistory) {
      var refererPath = window.location.pathname;

      if (!ignoreHistory) {
        addToHistory(url);
      }

      fetchAjax(url, ".spa-content", { "headers": {
          "TEMBA-SPA": "1", 
          "TEMBA-REFERER-PATH": refererPath,
          "TEMBA-PATH": url
          }, 
        "onSuccess": hideLoading, "ignoreEvents": ignoreEvents, "cancel": true
      });
    }

    function fetchURL(url, triggerEvents) {
 
      showLoading();
      var refererPath = window.location.pathname;
      var menu = document.querySelector("temba-menu");
      gotoURL(url, !triggerEvents);
    }
   
    function handleMenuClicked(event) {

      var menu = document.querySelector("temba-menu");
      var items = event.detail;

      var item = items.item;
      var parent = items.parent;
      var selection = items.selection;

      if (item.trigger) {
        if (item.href) {
          window.open(item.href, "_blank");
        }
        return;
      }

      if (item.type == "modax-button") {
        var modaxOptions = { 
          disabled: false, 
          onSubmit: item.on_submit
        }
        showModax(item.name, item.href, modaxOptions);
      }

      if (!item.popup && selection.length > 1 && selection[0] == "ticket") {
        if (window.handleTicketsMenuChanged) {
          handleTicketsMenuChanged(item);
        }
      }

      // clicked inside our workspace popup
      if (parent && parent.id == "workspace") {
        if (item.id == "settings") {
          fetchURL("{% url 'orgs.org_workspace' %}");
          document.querySelector("temba-menu").click();
        } else if (item.posterize) {
          posterize(item.href)
        }
        else {
          handleWorkspaceChanged(item.id);
        }
      }
    }

    function handleMenuChanged(event) {

      var selection = event.target.getSelection();
      var menuItem = event.target.getMenuItem();

      var body = document.querySelector(".spa-content");
      if (menuItem && menuItem.href) {
        showLoading();
        gotoURL(menuItem.href);
      }

      if (selection.length > 1) {
        var section = selection[0];
        var name = `handle${section.charAt(0).toUpperCase()}${section.slice(1)}MenuChanged`;
        if (this[name]) {
          this[name](menuItem);
        }
      }
    }

    function showModax(header, endpoint, modaxOptions) {

      var options = modaxOptions || {};
      var modax = document.querySelector("temba-modax#shared-modax");
      modax.className = options.id || "";
      modax["-temba-loaded"] = undefined;
      
      modax.disabled = options.disabled == "True";
      var itemOnSubmit;
      if (options.onSubmit == "None") {
        onSubmit = undefined;
      }

      if (options.onSubmit) {
        modax["-temba-submitted"] = Function(options.onSubmit);
      } else {
        modax["-temba-submitted"] = undefined;
      }

      if (options.onRedirect) {
        modax["-temba-redirected"] = Function(options.onRedirect);
      } else {
        modax["-temba-redirected"] = refreshMenu;
      }

      modax.headers = {"TEMBA-SPA": 1};
      modax.header = header;
      modax.endpoint = endpoint;
      modax.open = true;
    }

    function handleWorkspaceChanged(orgId) {
      showLoading(true);
      var store = document.querySelector("temba-store");
      store.postUrl("/org/choose/", "organization=" + orgId, {}, 'application/x-www-form-urlencoded').then(function(response) {
        if (response.redirected) {
          document.location.href = response.url;
        }
      });
    }

    document.addEventListener("temba-redirected", function(event){
      fetchURL(event.detail.url, true);
    });

    document.addEventListener("temba-pjax-complete", function() {
      refreshMenu();
      hideLoading();
      handleUpdateComplete();
    })

    window.addEventListener("popstate", function (event){
      let state = event.state;
      if (state && state.url) {
        showLoading();

        var url = state.url;
        gotoURL(url, false, true);
      }
    });

    document.addEventListener('DOMContentLoaded', function(){      
      document.querySelector(".spa-content").addEventListener("submit", function(evt) {
        var formEle = evt.target;
        if(formEle.closest(".formax-section")) {
          return;
        }
  
        var url = formEle.action || document.location.href;

        if (formEle.method.toLowerCase() !== "post") {
          evt.stopPropagation();
          evt.preventDefault();
          var formData = new FormData(formEle);
          let queryString = new URLSearchParams(formData).toString();
          showLoading();
  
          if (queryString) {
            if (url.indexOf("?") > 0) {
              url += "&" + queryString;
            } else {
              url += "?" + queryString;
            }
          }
  
          gotoURL(url);
        } else {
  
          evt.stopPropagation();
          evt.preventDefault();
          
          if (url.indexOf("{% url 'orgs.org_service'%}") > -1) {
            formEle.submit();
          } else {
            var formData = new FormData(formEle);
            showLoading();

            var store = document.querySelector("temba-store");
            store.postUrl(url, formData, { "TEMBA-SPA": "1"}).then(function(response){
              var content = document.querySelector(".spa-content");

              // remove jquery use here
              $(content).html(response.body);

              if (response.redirected) {
                addToHistory(response.url);
              }

              hideLoading(response);
            });

          }
        }
      });
    })


    
    
-block refresh-fn
  :javascript
    function refresh(onSuccess, forceReload){
    }

-block temba-store
  -if user_org
    %temba-store(
      completion="/mr/docs/{{ LANGUAGE_CODE }}/editor.json"
      languages="/org/languages/"
      fields="/api/v2/fields.json"
      globals="/api/v2/globals.json"
      groups="/api/v2/groups.json"
      workspace="/api/v2/workspace.json"
      users="/api/v2/users.json"
    )
  -else
    %temba-store

-block page-container
  <!-- {{temba_version}} -->
  %temba-mask
  %temba-modax#shared-modax
  %temba-dialog#shared-dialog
  .ajax-scripts

  .flex-col
    .flex.widget-container(style="height:100vh;overflow:hidden")
      -if request.user.is_staff
        -if user_org and user_org not in user_orgs
          .servicing.absolute.bg-secondary.my-2.mr-20.rounded.shadow-xl(style="z-index:999999;right:0;bottom:0;")
            %a.posterize.relative(href="{% url 'orgs.org_service' %}" style="text-decoration:none")
              .flex.items-center.text-white.text-lg.hover.rounded(style="opacity:1;padding:0em 0.5em;")
                .flex-grow
                %temba-icon(style="color:#fff" name="service")
                .ml-2
                  {{user_org.name}}
                .flex-grow

      .folders
        %temba-menu#nav(class="{% if servicing %}{% endif%}" style="height:100%" endpoint="{% url 'orgs.org_menu' %}" onchange="handleMenuChanged(event)" -temba-button-clicked="handleMenuClicked(event)" -temba-ready="handleMenuReady")
          -block menu-header

      .flex-grow.spa-container.flex.flex-col.initial-load
        .spa-loader.hide.absolute
          .wrapper(style="display:flex;z-index:100000;margin-top:0.1em;margin-left:1em")
            %temba-loading(size=16 units=6)

        .spa-content.p-5.overflow-y-auto.overflow-x-hidden

          -block spa-style

          -block page-header
            -if title or has_content_menu
              .mb-4
                .spa-title.no-menu.flex.items-center
                  .text-container.text-2xl.text-gray-700
                    .flex.flex-row
                      -block spa-title
                        #title-text
                          {{title}}
                  .line.flex-grow.mr-2.ml-6
                    .h-0.border.border-gray-200
                  
                  -if has_content_menu
                    -include "spa_page_menu.haml"
            
                .text-lg.text-gray-600
                    -block subtitle
                  
          -block alert-messages
            -if user_org.is_suspended
              -include "org_suspended_include.haml"
            -if messages
              -for msg in messages
                %temba-alert.mb-3
                  {{ msg }}

          -block content

        -block footer
          .spa-footer.text-center.text-gray-500.mt-4
            :plain
              <!--
                License requires that the copyright attribution remain, please do not modify.
              -->
              Copyright © 2012-2023 TextIt. All rights reserved.
  
  %temba-lightbox
