-extends "smartmin/list.html"
-load smartmin temba i18n humanize

-block page-title
  -trans "Manage Globals"

-block title-icon
  .title-icon
    %span.glyph.icon-global

-block page-top

-block content
  .mb-4
    -blocktrans trimmed
      Globals are variables you can use across all of your flows but 
      manage the value for in one place. For example, you might use them 
      to store API keys you need to access external services or product names that
      might change later.

  .flex
    .flex-grow.self-end.items-end
      .flex.flex-col
        %form#search-form(method="get" action="{{request.path}}")
          %temba-textinput.w-full(placeholder='{% trans "Search" %}' name="search" value="{{search}}")
          %input.hide(type="submit")
        -if search_error
          .mb-4.ml-2
            %span.search-error
              =search_error

  -block pre-table
    %temba-modax(id='update-global' header='{{_("Update Global")|escapejs}}' -temba-redirected="refreshGlobals")
    %temba-modax(id='delete-global' header='{{_("Delete Global")|escapejs}}' -temba-redirected="refreshGlobals")
    %temba-modax(id='usages-global' header='{{_("Usages")|escapejs}}')



  .mt-4.shadow.rounded-lg.rounded-bl-none.rounded-br-none.bg-white
    -include "includes/short_pagination.haml"
  .flex-grow.overflow-y-auto.shadow  
    %table.list.lined.scrolled{class:"{% if org_perms.contacts.contact_update %}selectable{%endif%}"}
      %tbody
        -for obj in object_list
          %tr.hover-linked.update{onclick:"showUpdateGlobalModal({{obj.id}})"}
            %td(style="min-width: 50px")
              {{ obj.name }}
            %td(style="font-family: monospace; font-size: 12px;")
              @globals.{{ obj.key }}
            %td
              .break-all
                {{ obj.value|truncatechars:25 }}
            %td.w-12
              .flex.text-center
                -with usage_count=obj.usage_count
                  -if usage_count
                  .uses(onclick='event.stopPropagation(); showGlobalUsagesModal("{{ obj.uuid }}");')
                    .lbl.linked
                      {% blocktrans trimmed count counter=usage_count %}
                        {{counter}} Use
                      {% plural %}
                        {{counter}} Uses
                      {% endblocktrans %}

            %td.w-10
              -if org_perms.globals.global_delete
                .pl-2.pt-1.delete-link.linked.text-gray-400(style="visibility:hidden" onclick='event.stopPropagation(); showDeleteGlobalModal("{{obj.uuid}}");')
                    %span.icon-close
        -empty
          %tr.empty_list
            %td(colspan='99')
              -if search
                -blocktrans trimmed with search=search
                  No globals found for {{search}}
              -else
                -trans "No globals"

-block extra-script
  {{ block.super }}
  <script>
    function showUpdateGlobalModal(id) {
      var modax = document.querySelector('#update-global');
      modax.endpoint = `/global/update/${id}/`;
      modax.open = true;
    }

    function showDeleteGlobalModal(uuid) {
      var modax = document.querySelector('#delete-global');
      modax.endpoint = `/global/delete/${uuid}/`;
      modax.open = true;
    }

    function showGlobalUsagesModal(uuid) {
      var modax = document.querySelector('#usages-global');
      modax.endpoint = `/global/usages/${uuid}/`
      modax.open = true;
    }

  </script>

-block extra-style
  {{block.super}}
  :css
    tr.global {
      cursor: pointer;
    }

    tr:hover .delete-link {
      visibility: visible !important;
    }

    .title-icon {
      margin-bottom: -9px;
    }

    td.dependencies {
      text-align: right;
      white-space: nowrap;
      width: 3em;
    }

