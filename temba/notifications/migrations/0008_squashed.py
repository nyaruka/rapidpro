# Generated by Django 4.0.3 on 2022-03-10 17:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("flows", "0278_squashed"),
        ("msgs", "0169_squashed"),
        ("orgs", "0093_squashed"),
        ("contacts", "0153_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("channels", "0137_squashed"),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("incident_type", models.CharField(max_length=20)),
                ("scope", models.CharField(max_length=36)),
                ("started_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("ended_on", models.DateTimeField(null=True)),
                (
                    "channel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="incidents",
                        to="channels.channel",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="incidents", to="orgs.org"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="notification_counts", to="orgs.org"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notification_counts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("notification_type", models.CharField(max_length=16)),
                ("scope", models.CharField(max_length=36)),
                ("is_seen", models.BooleanField(default=False)),
                (
                    "email_status",
                    models.CharField(
                        choices=[("P", "Pending"), ("S", "Sent"), ("N", "None")], default="N", max_length=1
                    ),
                ),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "contact_export",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="contacts.exportcontactstask",
                    ),
                ),
                (
                    "contact_import",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="contacts.contactimport",
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="notifications.incident",
                    ),
                ),
                (
                    "message_export",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="msgs.exportmessagestask",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="notifications", to="orgs.org"
                    ),
                ),
                (
                    "results_export",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to="flows.exportflowresultstask",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["org", "user", "-created_on"], name="notificatio_org_id_17c9ee_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                condition=models.Q(("email_status", "P")), fields=["created_on"], name="notifications_email_pending"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                condition=models.Q(("is_seen", False)),
                fields=["org", "notification_type", "user"],
                name="notifications_unseen_of_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="notification",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_seen", False)),
                fields=("org", "notification_type", "scope", "user"),
                name="notifications_unseen_scoped",
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on", None)), fields=["incident_type"], name="incidents_ongoing"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on", None)), fields=["org", "-started_on"], name="incidents_org_ongoing"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                condition=models.Q(("ended_on__isnull", False)),
                fields=["org", "-started_on"],
                name="incidents_org_ended",
            ),
        ),
        migrations.AddConstraint(
            model_name="incident",
            constraint=models.UniqueConstraint(
                condition=models.Q(("ended_on", None)),
                fields=("org", "incident_type", "scope"),
                name="incidents_ongoing_scoped",
            ),
        ),
    ]
