# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-01-16 18:31
from __future__ import unicode_literals

from django.db import migrations


def delete_empty_typed_fields():
    from temba.contacts.models import ContactField, ContactGroup
    from temba.values.models import Value

    # we will iterate all contact fields which are typed and active
    typed_fields = (
        ContactField.objects
        .filter(is_active=True)
        .filter(value_type__in=[Value.TYPE_DECIMAL, Value.TYPE_DATETIME, Value.TYPE_STATE, Value.TYPE_DISTRICT, Value.TYPE_WARD])
    )

    total = typed_fields.count()
    processed = 0

    for field in typed_fields:
        contacts = []

        # get any groups dependent on this field
        groups = ContactGroup.user_groups.filter(query_fields=field)

        # calculate our queryset for empty values
        empty_values = Value.objects.filter(contact_field=field)
        if field.value_type == Value.TYPE_DECIMAL:
            empty_values = empty_values.filter(decimal_value=None)
        elif field.value_type == Value.TYPE_DATETIME:
            empty_values = empty_values.filter(datetime_value=None)
        else:
            empty_values = empty_values.filter(location_value=None)

        # for each value, delete it and save the contact
        for value in empty_values.select_related('contact'):
            value.delete()
            contacts.append(value.contact)

        # reevaluate all our contacts for dependent groups
        for group in groups:
            group.reevaluate_contacts(contacts)

        processed += 1
        print("Processed %d of %d fields" % (processed, total))


def apply_manual():
    delete_empty_typed_fields()


def apply_as_migration(apps, schema_editor):
    delete_empty_typed_fields()


def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('contacts', '0069_iso639-3'),
    ]

    operations = [
        migrations.RunPython(apply_as_migration, noop)
    ]
