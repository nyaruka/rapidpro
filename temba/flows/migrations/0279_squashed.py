# Generated by Django 4.0.3 on 2022-03-10 17:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("channels", "0138_squashed"),
        ("flows", "0278_squashed"),
        ("msgs", "0169_squashed"),
        ("orgs", "0093_squashed"),
        ("contacts", "0153_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("classifiers", "0007_squashed"),
        ("globals", "0007_squashed"),
        ("templates", "0012_squashed"),
        ("tickets", "0027_squashed"),
    ]

    operations = [
        migrations.AddField(
            model_name="flowstart",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="flow_starts", to="orgs.org"
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="connection",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="session",
                to="channels.channelconnection",
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="sessions", to="contacts.contact"
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="current_flow",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="sessions", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flowsession",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="sessions", to="orgs.org"
            ),
        ),
        migrations.AddField(
            model_name="flowruncount",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="exit_counts", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="runs", to="contacts.contact"
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="flow",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name="runs", to="flows.flow"),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="org",
            field=models.ForeignKey(
                db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name="runs", to="orgs.org"
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="session",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="runs", to="flows.flowsession"
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="start",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="runs", to="flows.flowstart"
            ),
        ),
        migrations.AddField(
            model_name="flowrun",
            name="submitted_by",
            field=models.ForeignKey(
                db_index=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="flowrevision",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowrevision",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="revisions", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flowrevision",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flowpathcount",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="path_counts", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flownodecount",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="node_counts", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flowlabel",
            name="org",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="flow_labels", to="orgs.org"
            ),
        ),
        migrations.AddField(
            model_name="flowlabel",
            name="parent",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, related_name="children", to="flows.flowlabel"
            ),
        ),
        migrations.AddField(
            model_name="flowcategorycount",
            name="flow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="category_counts", to="flows.flow"
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="channel_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="channels.channel"),
        ),
        migrations.AddField(
            model_name="flow",
            name="classifier_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="classifiers.classifier"),
        ),
        migrations.AddField(
            model_name="flow",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="field_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="contacts.contactfield"),
        ),
        migrations.AddField(
            model_name="flow",
            name="flow_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="flows.flow"),
        ),
        migrations.AddField(
            model_name="flow",
            name="global_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="globals.global"),
        ),
        migrations.AddField(
            model_name="flow",
            name="group_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="contacts.contactgroup"),
        ),
        migrations.AddField(
            model_name="flow",
            name="label_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="msgs.label"),
        ),
        migrations.AddField(
            model_name="flow",
            name="labels",
            field=models.ManyToManyField(related_name="flows", to="flows.flowlabel"),
        ),
        migrations.AddField(
            model_name="flow",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="org",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name="flows", to="orgs.org"),
        ),
        migrations.AddField(
            model_name="flow",
            name="saved_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="flow_saves", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="flow",
            name="template_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="templates.template"),
        ),
        migrations.AddField(
            model_name="flow",
            name="ticketer_dependencies",
            field=models.ManyToManyField(related_name="dependent_flows", to="tickets.ticketer"),
        ),
        migrations.AddField(
            model_name="flow",
            name="topic_dependencies",
            field=models.ManyToManyField(related_name="dependent_topics", to="tickets.topic"),
        ),
        migrations.AddField(
            model_name="flow",
            name="user_dependencies",
            field=models.ManyToManyField(related_name="dependent_users", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="exportflowresultstask",
            name="created_by",
            field=models.ForeignKey(
                help_text="The user which originally created this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_creations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="exportflowresultstask",
            name="flows",
            field=models.ManyToManyField(help_text="The flows to export", related_name="exports", to="flows.flow"),
        ),
        migrations.AddField(
            model_name="exportflowresultstask",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(app_label)s_%(class)s_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="exportflowresultstask",
            name="org",
            field=models.ForeignKey(
                help_text="The organization of the user.",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(class)ss",
                to="orgs.org",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(
                condition=models.Q(("created_by__isnull", False)),
                fields=["org", "-created_on"],
                name="flows_flowstarts_org_created",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(
                condition=models.Q(("created_by__isnull", False)),
                fields=["org", "-modified_on"],
                name="flows_flowstarts_org_modified",
            ),
        ),
        migrations.AddIndex(
            model_name="flowstart",
            index=models.Index(fields=["org", "start_type", "-created_on"], name="flows_flowstart_org_start_type"),
        ),
        migrations.AddIndex(
            model_name="flowsession",
            index=models.Index(
                condition=models.Q(("session_type", "M"), ("status", "W"), ("wait_expires_on__isnull", False)),
                fields=["wait_expires_on"],
                name="flows_session_message_expires",
            ),
        ),
        migrations.AddIndex(
            model_name="flowsession",
            index=models.Index(
                condition=models.Q(("session_type", "V"), ("status", "W"), ("wait_expires_on__isnull", False)),
                fields=["wait_expires_on"],
                name="flows_session_voice_expires",
            ),
        ),
        migrations.AddConstraint(
            model_name="flowsession",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("status", "W"), _negated=True),
                    models.Q(("wait_expires_on__isnull", False), ("wait_started_on__isnull", False)),
                    _connector="OR",
                ),
                name="flows_session_waiting_has_started_and_expires",
            ),
        ),
        migrations.AlterIndexTogether(
            name="flowruncount",
            index_together={("flow", "exit_type")},
        ),
        migrations.AddIndex(
            model_name="flowrun",
            index=models.Index(
                condition=models.Q(("status__in", ("A", "W"))),
                fields=["org", "current_node_uuid"],
                include=("contact",),
                name="flows_flowrun_contacts_at_node",
            ),
        ),
        migrations.AlterIndexTogether(
            name="flowpathcount",
            index_together={("flow", "from_uuid", "to_uuid", "period")},
        ),
        migrations.AlterUniqueTogether(
            name="flowlabel",
            unique_together={("name", "parent", "org")},
        ),
    ]
