# Generated by Django 5.2.2 on 2025-08-11 19:32


from django.db import migrations
from django.db.models import Prefetch

from temba.utils import dynamo


def write_transfer_events(apps, schema_editor):
    AirtimeTransfer = apps.get_model("airtime", "AirtimeTransfer")
    Contact = apps.get_model("contacts", "Contact")

    transfers = AirtimeTransfer.objects.filter(org__is_active=True, contact__is_active=True).prefetch_related(
        Prefetch("contact", Contact.objects.only("uuid"))
    )

    num_written = 0

    with dynamo.HISTORY.batch_writer() as batch:
        for transfer in transfers:
            batch.put_item(
                {
                    "PK": f"con#{transfer.contact.uuid}",
                    "SK": f"evt#{transfer.uuid}",
                    "OrgID": transfer.org_id,
                    "Data": {
                        "type": "airtime_transferred",
                        "created_on": transfer.created_on.isoformat(),
                        "external_id": transfer.external_id,
                        "sender": transfer.sender,
                        "recipient": transfer.recipient,
                        "currency": transfer.currency,
                        "amount": transfer.actual_amount,
                    },
                }
            )
            num_written += 1

            if num_written % 500 == 0:  # pragma: no cover
                print(f"Wrote {num_written} airtime transfer events to DynamoDB.")


class Migration(migrations.Migration):

    dependencies = [
        ("airtime", "0038_update_transfer_uuids"),
    ]

    operations = [
        migrations.RunPython(write_transfer_events, reverse_code=migrations.RunPython.noop),
    ]
