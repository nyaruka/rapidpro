# Generated by Django 4.0.8 on 2023-01-11 15:35

import django.contrib.postgres.fields
import django.utils.timezone
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models

import temba.orgs.models
import temba.utils.fields
import temba.utils.models.fields
import temba.utils.uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name="Broadcast",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "raw_urns",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                ("base_language", models.CharField(max_length=4)),
                ("text", temba.utils.models.fields.TranslatableField(max_length=640)),
                ("media", temba.utils.models.fields.TranslatableField(max_length=2048, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("I", "Initializing"), ("Q", "Queued"), ("S", "Sent"), ("F", "Failed")],
                        default="I",
                        max_length=1,
                    ),
                ),
                ("created_on", models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ("modified_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("send_all", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True, null=True)),
                ("metadata", temba.utils.models.fields.JSONAsTextField(default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="BroadcastMsgCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExportMessagesTask",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("P", "Pending"), ("O", "Processing"), ("C", "Complete"), ("F", "Failed")],
                        default="P",
                        max_length=1,
                    ),
                ),
                ("system_label", models.CharField(max_length=1, null=True)),
                ("start_date", models.DateField(null=True)),
                ("end_date", models.DateField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, unique=True)),
                ("name", models.CharField(max_length=64, validators=[temba.utils.fields.NameValidator(64)])),
                ("is_system", models.BooleanField(default=False)),
                ("label_type", models.CharField(max_length=1, null=True)),
            ],
            bases=(models.Model, temba.orgs.models.DependencyMixin),
        ),
        migrations.CreateModel(
            name="LabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(db_index=True, default=temba.utils.uuid.uuid4, unique=True)),
                ("url", models.URLField(max_length=2048)),
                ("content_type", models.CharField(max_length=255)),
                ("path", models.CharField(max_length=2048)),
                ("size", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[("P", "Pending"), ("R", "Ready"), ("F", "Failed")], default="P", max_length=1
                    ),
                ),
                ("duration", models.IntegerField(default=0)),
                ("width", models.IntegerField(default=0)),
                ("height", models.IntegerField(default=0)),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("name", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Msg",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, null=True)),
                ("text", models.TextField()),
                (
                    "attachments",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(max_length=2048), null=True, size=None
                    ),
                ),
                ("high_priority", models.BooleanField(null=True)),
                ("created_on", models.DateTimeField(db_index=True)),
                ("modified_on", models.DateTimeField(auto_now=True, null=True)),
                ("sent_on", models.DateTimeField(null=True)),
                ("queued_on", models.DateTimeField(null=True)),
                (
                    "msg_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox Message"),
                            ("F", "Flow Message"),
                            ("V", "IVR Message"),
                            ("U", "USSD Message"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("direction", models.CharField(choices=[("I", "Incoming"), ("O", "Outgoing")], max_length=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("P", "Pending"),
                            ("H", "Handled"),
                            ("Q", "Queued"),
                            ("W", "Wired"),
                            ("S", "Sent"),
                            ("D", "Delivered"),
                            ("E", "Error"),
                            ("F", "Failed"),
                        ],
                        db_index=True,
                        default="P",
                        max_length=1,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("V", "Visible"),
                            ("A", "Archived"),
                            ("D", "Deleted by user"),
                            ("X", "Deleted by sender"),
                        ],
                        default="V",
                        max_length=1,
                    ),
                ),
                ("msg_count", models.IntegerField(default=1)),
                ("error_count", models.IntegerField(default=0)),
                ("next_attempt", models.DateTimeField(null=True)),
                (
                    "failed_reason",
                    models.CharField(
                        choices=[
                            ("S", "Workspace suspended"),
                            ("C", "Contact is no longer active"),
                            ("L", "Looping detected"),
                            ("E", "Retry limit reached"),
                            ("O", "Too old to send"),
                            ("D", "No suitable channel found"),
                            ("R", "Channel removed"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("external_id", models.CharField(max_length=255, null=True)),
                ("metadata", temba.utils.models.fields.JSONAsTextField(default=dict, null=True)),
                (
                    "log_uuids",
                    django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), null=True, size=None),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemLabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                (
                    "label_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox"),
                            ("W", "Flows"),
                            ("A", "Archived"),
                            ("O", "Outbox"),
                            ("S", "Sent"),
                            ("X", "Failed"),
                            ("E", "Scheduled"),
                        ],
                        max_length=1,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
            ],
        ),
    ]
