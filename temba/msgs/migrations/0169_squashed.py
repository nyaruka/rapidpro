# Generated by Django 4.0.3 on 2022-03-10 17:56

import django.contrib.postgres.fields
import django.utils.timezone
from django.conf import settings
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models

import temba.orgs.models
import temba.utils.models
import temba.utils.uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("flows", "0278_squashed"),
        ("orgs", "0093_squashed"),
        ("contacts", "0153_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("channels", "0137_squashed"),
        ("schedules", "0017_squashed"),
        ("tickets", "0027_squashed"),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name="Broadcast",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "raw_urns",
                    django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None),
                ),
                ("base_language", models.CharField(max_length=4)),
                ("text", temba.utils.models.TranslatableField(max_length=640)),
                ("media", temba.utils.models.TranslatableField(max_length=2048, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("I", "Initializing"), ("Q", "Queued"), ("S", "Sent"), ("F", "Failed")],
                        default="I",
                        max_length=1,
                    ),
                ),
                ("created_on", models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ("modified_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("send_all", models.BooleanField(default=False)),
                ("metadata", temba.utils.models.JSONAsTextField(default=dict, null=True)),
                (
                    "channel",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="channels.channel"),
                ),
                ("contacts", models.ManyToManyField(related_name="addressed_broadcasts", to="contacts.contact")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broadcast_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("groups", models.ManyToManyField(related_name="addressed_broadcasts", to="contacts.contactgroup")),
                (
                    "modified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broadcast_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("org", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="orgs.org")),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="msgs.broadcast",
                    ),
                ),
                (
                    "schedule",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broadcast",
                        to="schedules.schedule",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broadcasts",
                        to="tickets.ticket",
                    ),
                ),
                ("urns", models.ManyToManyField(related_name="addressed_broadcasts", to="contacts.contacturn")),
            ],
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "label_type",
                    models.CharField(
                        choices=[("F", "Folder of labels"), ("L", "Regular label")], default="L", max_length=1
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="msgs.label",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="msgs_labels", to="orgs.org"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, temba.orgs.models.DependencyMixin),
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Msg",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, null=True)),
                ("text", models.TextField()),
                (
                    "attachments",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(max_length=2048), null=True, size=None
                    ),
                ),
                ("high_priority", models.BooleanField(null=True)),
                ("created_on", models.DateTimeField(db_index=True)),
                ("modified_on", models.DateTimeField(auto_now=True, null=True)),
                ("sent_on", models.DateTimeField(null=True)),
                ("queued_on", models.DateTimeField(null=True)),
                (
                    "msg_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox Message"),
                            ("F", "Flow Message"),
                            ("V", "IVR Message"),
                            ("U", "USSD Message"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("direction", models.CharField(choices=[("I", "Incoming"), ("O", "Outgoing")], max_length=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("I", "Initializing"),
                            ("P", "Pending"),
                            ("Q", "Queued"),
                            ("W", "Wired"),
                            ("S", "Sent"),
                            ("D", "Delivered"),
                            ("H", "Handled"),
                            ("E", "Error"),
                            ("F", "Failed"),
                            ("R", "Resent"),
                        ],
                        db_index=True,
                        default="P",
                        max_length=1,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("V", "Visible"),
                            ("A", "Archived"),
                            ("D", "Deleted by user"),
                            ("X", "Deleted by sender"),
                        ],
                        default="V",
                        max_length=1,
                    ),
                ),
                ("msg_count", models.IntegerField(default=1)),
                ("error_count", models.IntegerField(default=0)),
                ("next_attempt", models.DateTimeField(null=True)),
                (
                    "failed_reason",
                    models.CharField(
                        choices=[
                            ("S", "Suspended"),
                            ("L", "Looping"),
                            ("E", "Error Limit"),
                            ("O", "Too Old"),
                            ("D", "No Destination"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("external_id", models.CharField(max_length=255, null=True)),
                ("metadata", temba.utils.models.JSONAsTextField(default=dict, null=True)),
                (
                    "broadcast",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="msgs.broadcast",
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="channels.channel",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        db_index=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="contacts.contact",
                    ),
                ),
                (
                    "contact_urn",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="contacts.contacturn",
                    ),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        db_index=False, null=True, on_delete=django.db.models.deletion.PROTECT, to="flows.flow"
                    ),
                ),
                ("labels", models.ManyToManyField(related_name="msgs", to="msgs.label")),
                (
                    "org",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name="msgs", to="orgs.org"),
                ),
                (
                    "topup",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="orgs.topup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
                (
                    "label",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="counts", to="msgs.label"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExportMessagesTask",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("P", "Pending"), ("O", "Processing"), ("C", "Complete"), ("F", "Failed")],
                        default="P",
                        max_length=1,
                    ),
                ),
                ("system_label", models.CharField(max_length=1, null=True)),
                (
                    "start_date",
                    models.DateField(blank=True, help_text="The date for the oldest message to export", null=True),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, help_text="The date for the newest message to export", null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("groups", models.ManyToManyField(to="contacts.contactgroup")),
                ("label", models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="msgs.label")),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        help_text="The organization of the user.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)ss",
                        to="orgs.org",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BroadcastMsgCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
                (
                    "broadcast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="counts", to="msgs.broadcast"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemLabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                (
                    "label_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox"),
                            ("W", "Flows"),
                            ("A", "Archived"),
                            ("O", "Outbox"),
                            ("S", "Sent"),
                            ("X", "Failed"),
                            ("E", "Scheduled"),
                            ("C", "Calls"),
                        ],
                        max_length=1,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("count", models.IntegerField(default=0)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="system_labels", to="orgs.org"
                    ),
                ),
            ],
            options={
                "index_together": {("org", "label_type")},
            },
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(("direction", "O"), ("next_attempt__isnull", False), ("status", "E")),
                fields=["next_attempt", "created_on", "id"],
                name="msgs_next_attempt_out_errored",
            ),
        ),
        migrations.AddIndex(
            model_name="msg",
            index=models.Index(
                condition=models.Q(("direction", "O"), ("status__in", ("W", "S", "D")), ("visibility", "V")),
                fields=["org", "-sent_on", "-id"],
                name="msgs_outgoing_visible_sent",
            ),
        ),
        migrations.AddConstraint(
            model_name="msg",
            constraint=models.CheckConstraint(
                check=models.Q(("sent_on__isnull", True), ("status__in", ("W", "S", "D")), _negated=True),
                name="no_sent_status_without_sent_on",
            ),
        ),
        migrations.AddIndex(
            model_name="broadcast",
            index=models.Index(fields=["org", "-created_on", "-id"], name="msgs_broadcasts_org_created_id"),
        ),
    ]
