# Generated by Django 5.2.2 on 2025-09-23 19:05

from django.db import migrations


def fix_folder_counts(apps, schema_editor):
    Org = apps.get_model("orgs", "Org")
    ItemCount = apps.get_model("orgs", "ItemCount")

    for org in Org.objects.only("id", "name").order_by("id"):
        if not org.msgs.filter(msg_type="V").exists():
            continue

        counts = []

        if count := org.msgs.filter(msg_type="V", visibility="V", status="H", flow__isnull=True).count():
            counts.append(ItemCount(org=org, scope="msgs:folder:I", is_squashed=False, count=count))
        if count := org.msgs.filter(msg_type="V", visibility="V", status="H", flow__isnull=False).count():
            counts.append(ItemCount(org=org, scope="msgs:folder:W", is_squashed=False, count=count))
        if count := org.msgs.filter(msg_type="V", visibility="A", status="H").count():
            counts.append(ItemCount(org=org, scope="msgs:folder:A", is_squashed=False, count=count))

        if counts:
            ItemCount.objects.bulk_create(counts)

            count_dict = {c.scope[12]: c.count for c in counts}
            print(f"Fixed inbox counts for org #{org.id} '{org.name}' ({count_dict})")


def apply_manual():  # pragma: no cover
    from django.apps import apps

    fix_folder_counts(apps, None)


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("msgs", "0291_update_triggers"),
    ]

    operations = [
        migrations.RunPython(fix_folder_counts, migrations.RunPython.noop),
    ]
