# Generated by Django 4.0.3 on 2022-03-10 17:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import temba.orgs.models
import temba.utils.uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orgs", "0093_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contacts", "0152_squashed"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, unique=True)),
                ("body", models.TextField()),
                ("external_id", models.CharField(max_length=255, null=True)),
                ("config", models.JSONField(null=True)),
                ("status", models.CharField(choices=[("O", "Open"), ("C", "Closed")], max_length=1)),
                ("opened_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("closed_on", models.DateTimeField(null=True)),
                ("modified_on", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_activity_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "assignee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="tickets", to="contacts.contact"
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="tickets", to="orgs.org"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4, unique=True)),
                ("name", models.CharField(max_length=64)),
                ("is_default", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="topics", to="orgs.org"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, temba.orgs.models.DependencyMixin),
        ),
        migrations.CreateModel(
            name="TicketEvent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("O", "Opened"),
                            ("A", "Assigned"),
                            ("N", "Note Added"),
                            ("T", "Topic Changed"),
                            ("C", "Closed"),
                            ("R", "Reopened"),
                        ],
                        max_length=1,
                    ),
                ),
                ("note", models.TextField(max_length=4096, null=True)),
                ("created_on", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "assignee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_assignee_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_events",
                        to="contacts.contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="ticket_events", to="orgs.org"
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="events", to="tickets.ticket"
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_events",
                        to="tickets.topic",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ticketer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                ("uuid", models.UUIDField(default=temba.utils.uuid.uuid4)),
                ("ticketer_type", models.CharField(max_length=16)),
                ("name", models.CharField(max_length=64)),
                ("config", models.JSONField()),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="ticketers", to="orgs.org"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, temba.orgs.models.DependencyMixin),
        ),
        migrations.CreateModel(
            name="TicketCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("is_squashed", models.BooleanField(default=False)),
                ("status", models.CharField(choices=[("O", "Open"), ("C", "Closed")], max_length=1)),
                ("count", models.IntegerField(default=0)),
                (
                    "assignee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_counts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="ticket_counts", to="orgs.org"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ticket",
            name="ticketer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="tickets", to="tickets.ticketer"
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, related_name="tickets", to="tickets.topic"
            ),
        ),
        migrations.AddIndex(
            model_name="ticketevent",
            index=models.Index(fields=["contact", "created_on"], name="ticketevents_contact_created"),
        ),
        migrations.AddIndex(
            model_name="ticketcount",
            index=models.Index(fields=["org", "status"], name="tickets_tic_org_id_3bdc4d_idx"),
        ),
        migrations.AddIndex(
            model_name="ticketcount",
            index=models.Index(fields=["org", "assignee", "status"], name="tickets_tic_org_id_6e466a_idx"),
        ),
        migrations.AddIndex(
            model_name="ticketcount",
            index=models.Index(
                condition=models.Q(("is_squashed", False)),
                fields=["org", "assignee", "status"],
                name="ticket_count_unsquashed",
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["org", "status", "-last_activity_on", "-id"], name="tickets_org_status"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["org", "assignee", "status", "-last_activity_on", "-id"], name="tickets_org_assignee_status"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                condition=models.Q(("status", "O")), fields=["contact", "-opened_on"], name="tickets_contact_open"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["ticketer", "external_id"], name="tickets_ticketer_external_id"),
        ),
    ]
