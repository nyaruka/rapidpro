# Generated by Django 4.0.3 on 2022-03-10 17:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("flows", "0278_squashed"),
        ("orgs", "0093_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("channels", "0137_squashed"),
        ("schedules", "0017_squashed"),
        ("contacts", "0152_squashed"),
    ]

    operations = [
        migrations.CreateModel(
            name="Trigger",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                ("trigger_type", models.CharField(default="K", max_length=1)),
                ("is_archived", models.BooleanField(default=False)),
                (
                    "keyword",
                    models.CharField(
                        blank=True,
                        help_text="Word to match in the message text.",
                        max_length=16,
                        null=True,
                        verbose_name="Keyword",
                    ),
                ),
                ("referrer_id", models.CharField(max_length=255, null=True)),
                (
                    "match_type",
                    models.CharField(
                        choices=[("F", "Message starts with the keyword"), ("O", "Message contains only the keyword")],
                        default="F",
                        help_text="How to match a message with a keyword.",
                        max_length=1,
                        null=True,
                        verbose_name="Trigger When",
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        help_text="The associated channel.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="triggers",
                        to="channels.channel",
                        verbose_name="Channel",
                    ),
                ),
                ("contacts", models.ManyToManyField(related_name="triggers", to="contacts.contact")),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "exclude_groups",
                    models.ManyToManyField(related_name="triggers_excluded", to="contacts.contactgroup"),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        help_text="Which flow will be started.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="triggers",
                        to="flows.flow",
                        verbose_name="Flow",
                    ),
                ),
                ("groups", models.ManyToManyField(related_name="triggers_included", to="contacts.contactgroup")),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(app_label)s_%(class)s_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="triggers", to="orgs.org"
                    ),
                ),
                (
                    "schedule",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trigger",
                        to="schedules.schedule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
